#summary An overview of different approaches to controlling MATLAB.

= Introduction =

There are a variety of approaches to MATLAB control with Java. At a high level they fall into several categories:
  # Controlling the MATLAB GUI from Java
  # Controlling the MATLAB engine from Java
  # Controlling multiple sessions of MATLAB from MATLAB using Java

= Approach 1: Controlling the MATLAB GUI =

This approach is for those that want to control a MATLAB session (or multiple sessions) that will also be used by a user, if you are just interested in using MATLAB for computation then Approach 2 is likely more appropriate.

  * The code available here was created to control one or more sessions of the MATLAB GUI from a Java program not launched from within MATLAB. This is done without any need for user interaction: the user does not need to change MATLAB configurations, launch MATLAB, or type any special commands into MATLAB so that it can be controlled.

  * The code here is based off of code from Kamin Whitehouse from the University of Virginia. His code allows for controlling MATLAB from Java, but the Java program must be launched from MATLAB. For more details see his <a href="http://www.cs.virginia.edu/~whitehouse/matlab/JavaMatlab.html">webpage</a> explaining his approach.

  * Bowen Hui from the University of Toronto <a href="http://www.cs.utoronto.ca/~bowen/code/code.html#matjav">also wrote code</a> based off Kamin Whitehouse's code to allow for controlling MATLAB from Java. Like the code on this website, his code can control MATLAB from a Java program that is not launched from within MATLAB. However, his code requires configuration on the part of the user, and it writes the results to a text file. This has the disadvantage of requiring parsing a text file, but the advantage that MATLAB output which may not be returned in a usable format to Java will be printed to the text file. However, if what you are really interested in is output from MATLAB, you are probably better off with the solutions that fall into Approach 2.

  * David Allen from the Virginia Polytechnic Institute addresses controlling MATLAB from Java in his <a href="http://institutes.lanl.gov/ei/pdf_files/dallenThesis1.pdf">thesis</a>. His description on the process is on page 32, which is actually page 38 of the PDF.

  * Erlangung der Würde from the Technischen Universität Carolo‐Wilhelmina zu Braunschweig describes another <a href="http://rzbl04.biblio.etc.tu-bs.de:8080/docportal/servlets/MCRFileNodeServlet/DocPortal_derivate_00005520/MeMo.pdf;jsessionid=68EFECE2491240789B79447B2803F3DE">solution</a> that seems to use socket binding and Java Native Interface (JNI) calls. The relevant pages appear to be 91 and 92, but the entire document is in German, so I'm less than certain.

= Approach 2: Controlling the MATLAB engine =

This approach is to use MATLAB for computation. It does not allow for user interaction.

  * <a href="http://jmatlink.sourceforge.net/">JMatLink</a> is a library that allows for controlling the MATLAB engine from Java. If you are using it with the latest version of MATLAB you may run into issues, see this <a href="http://www.mathworks.com/matlabcentral/newsreader/view_thread/263275">discussion thread</a> for more information and a solution.

  * Andreas Klimke from the University of Stuttgart has two different approaches to controlling the MATLAB engine. There is a <a href="http://preprints.ians.uni-stuttgart.de/downloads/2003/2003-005.pdf">paper</a> detailing the approaches. The source code for these approaches can be downloaded <a href="http://matlabdb.mathematik.uni-stuttgart.de/download.jsp?Search=Java&SearchCategory=All&MP_ID=163">here</a>.

  * A commercial approach is to use JIntegra. They have a <a href="http://j-integra.intrinsyc.com/support/com/doc/other_examples/Matlab.htm">web page</a> on how to use their product with MATLAB.

  * Another, now defunct, commercial approach is called MatlabServerAgent. Their website no longer exists, but it can be found <a href="http://web.archive.org/web/20040318183559/http://www.matlabserveragent.com">here</a> on the Internet Archive.




= Approach 3: Controlling multiple sessions of MATLAB from MATLAB =

This approach is very different from the above two. It uses Java to link together multiple sessions of MATLAB using Java.

  * Gabor Cselle from the Swiss Federal Institute of Technology has <a href="http://www.gaborcselle.com/mdct/">a tutorial and source code</a> on his approach to distributed computing on MATLAB using Java.

  * Scott Gorlin from the Massachusetts Insitute of Technology has <a href="http://www.scottgorlin.com/2007/07/matlabdispatch/">another approach</a> to control multiple sessions of MATLAB using Java. His code also makes use of Kamin Whitehouse's code. The code can be found <a href="http://git.scottgorlin.com/?p=MatlabDispatch.git">here</a>.

  * Brad Phelan created a solution called "Matlab 2 Matlab : Distributed Computing Toolbox". His website is currently not functional, but at least for the moment Google has a <a href="http://google.com/search?q=cache:WzmuqKbc9R8J:xtargets.com/cms/Tutorials/Matlab-Programming/Matlab-2-Matlab-Distributed-Computing-Toolbox.html">cache of the relevant web page</a>.